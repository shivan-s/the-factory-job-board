generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id         String   @id @default(cuid()) @map("_id") @db.ObjectId
  dateJoined DateTime @default(now())

  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]

  organisationIds String[]       @db.ObjectId
  organisations   Organisation[] @relation(fields: [organisationIds], references: [id])

  jobs   Job[]    @relation(fields: [jobIds], references: [id])
  jobIds String[] @db.ObjectId
}

model VerificationToken {
  id         String   @id @default(cuid()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Organisation {
  id        String   @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?

  authors   User[]   @relation(fields: [authorIds], references: [id])
  authorIds String[] @db.ObjectId
  jobs      Job[]
}

model Job {
  id        String   @id @default(cuid()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?

  organisation   Organisation? @relation(fields: [organisationId], references: [id])
  organisationId String?       @db.ObjectId

  applicants   User[]   @relation(fields: [applicantIds], references: [id])
  applicantIds String[] @db.ObjectId
}
